#!/sbin/openrc-run
# Copyright 1999-2013 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header: $


# WWSympa parameters
# WWSympa binaries directory
sympafcgidir="/home/sympa/bin"

# Sympa config files directory
sympaconf="/etc/sympa/sympa.conf"

FCGI_CHILDREN=5
FCGI_USER=sympa
FCGI_GROUP=sympa
FCGI_PID_DIR=/var/run/sympa
pidfile=$FCGI_PID_DIR/wwsympa.pid
FCGI_OPTS='-s /var/run/sympa/wwsympa.socket -M 0600 -U apache'

command=/usr/bin/spawn-fcgi
command_args="-F ${FCGI_CHILDREN} -P ${FCGI_PID_DIR}/wwsympa.pid -u ${FCGI_USER} -g ${FCGI_GROUP} ${FCGI_OPTS} -- ${sympafcgidir}/wwsympa.fcgi"

depend() {
	need apache2 rsyslog
}

stop() {
    einfo "stopping wwsympa"
    if [ -f ${FCGI_PID_DIR}/wwsympa.pid ]; then
        runcount=0
        pids=`cat ${FCGI_PID_DIR}/wwsympa.pid`
        if [ "$pids" != "" ]; then
            for pid in $pids; do
                killcount=0
                running=`ps -A | grep "^ $pid .*wwsympa"`
                while [ "$running" != "" ]; do
                    if [ $killcount -gt 10 ]; then
                        if [ ${use_functions} ]; then
                            failure
                        else
                            eerror 'failure'
                        fi
                        return 3
                    fi

		    kill -TERM $pid >/dev/null 2>&1
                    running=`ps -A | grep "^ $pid .*$1\\.fcgi"`
                    if [ "$running" = "" ]; then
                        runcount=`expr $runcount + 1`
                        break
                    fi
                    sleep 2
                    running=`ps -A | grep "^ $pid .*$1\\.fcgi"`
                    if [ "$running" = "" ]; then
                        runcount=`expr $runcount + 1`
                        break
                    fi
                    killcount=`expr $killcount + 1`
		done
            done
        fi
        if [ $runcount -gt 0 ]; then
            if [ ${use_functions} ]; then
                success
            else
                einfo 'wwsympa stopped'
            fi
        else
            eend 'died'
        fi
        echo
    else
        eend "Module $1.fcgi not running"
    fi
    return 0
}

status() {
   if [ -f ${FCGI_PID_DIR}/wwsympa.pid ]; then
        pid=`cat ${FCGI_PID_DIR}/wwsympa.pid | perl -p0777 -e 'chomp $_; s/\s+/|/g'`
        if [ "$pid" != "" ]; then
            running=`ps -A | egrep "$pid" | grep -v grep`
            if [ "$running" != "" ]; then
                einfo "$1 (pid(s) $pid) is active..."
                return 0
            else
                ewarn "$1 died, pid file remains."
                return 1
            fi
        fi
    fi
    einfo "$1 is stopped."
    return 3
}

start_pre() {
    ebegin "Starting wwsympa"
    [ -d ${FCGI_PID_DIR} ] || mkdir ${FCGI_PID_DIR}
}

